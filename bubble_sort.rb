require 'benchmark'  # => true


array = (1..1000).to_a.shuffle  # => [76, 385, 716, 827, 745, 65, 120, 744, 134, 569, 836, 931, 88, 717, 229, 921, 361, 561, 752, 71, 300, 182, 767, 512, 372, 304, 216, 276, 435, 427, 521, 289, 707, 981, 240, 366, 958, 542, 318, 207, 210, 599, 395, 791, 852, 413, 310, 845, 875, 1, 259, 190, 353, 930, 862, 489, 183, 722, 710, 492, 911, 506, 729, 994, 174, 646, 941, 667, 101, 855, 612, 257, 654, 477, 593, 735, 697, 127, 910, 60, 156, 320, 115, 280, 146, 900, 696, 180, 736, 706, 463, 566, 868, 586, 370, 885, 373, 534, 188, 319, 742, 410, 167, 154, 350, 937, 614, 402, 821, 72, 100, 898, 658, 786, 32, 928, 581, 861, 11, 793, 158, 975, 187, 524, 248, 523, 140, 55, 498, 552, 948, 509, 97, 755, 418, 466, 962, 178, 510, 656, 460, 538, 982, 235, 246, 399, 225, 557, 955, 201, 526, 639, 854, 82, 110, 856, 516, 763, 906, 560, 860, 208, 749, 5, 810, 760, 391, 888, 645, 13, 979, 434, 698, 200, 944, 926, 142, 328, 114, 664, 298, 91, 401, 782, 840, 67, 117, 181, 317, 555, 153, 264, 368, 214, 450, 77...
array_two  = [4, 3, 5, 0, 1]    # => [4, 3, 5, 0, 1]

def bubblesort(array)
      i = 0                           # => 0
      swapped = true                  # => true
      length= array.length-1          # => 999
      while swapped do                # => true, true, false
          swapped = false             # => false, false
          while i < length             # => true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, ...
              n = i +1                # => 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 21...
              if array[i] > array[n]  # => false, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true,...
              dummy = array[i]        # => 827, 827, 827, 827, 827, 827, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994,...
              array[i]= array[n]      # => 745, 65, 120, 744, 134, 569, 88, 717, 229, 921, 361, 561, 752, 71, 300, 182, 767, 512, 372, 304, 216, 276, 435, 427, 521, 289, 707, 240, 366, 958, 542, 318, 207, 210, 599, 395, 791, 852, 413, 310, 845, 875, 1, 259, 190, 353, 930, 862, 489, 183, 722, 710, 492, 911, 506, 729, 174, 646, 941, 667, 101, 855, 612, 257, 654, 477, 593, 735, 697, 127, 910, 60, 156, 320, 115, 280, 146, 900, 696, 180, 736, 706, 463, 566, 868, 586, 370, 885, 373, 534, 188, 319, 742, 410, 167, 154, 350, 937, 614, 402, 821, 72, 100, 898, 658, 786, 32, 928, 581, 861, 11, 793, 158, 975, 187, 524, 248, 523, 140, 55, 498, 552, 948, 509, 97, 755, 418, 466, 962, 178, 510, 656, 460, 538, 982, 235, 246, 399, 225, 557, 955, 201, 526, 639, 854, 82, 110, 856, 516, 763, 906, 560, 860, 208, 749, 5, 810, 760, 391, 888, 645, 13, 979, 434, 698, 200, 944, 926, 142, 328, 114, 664, 298, 91, 401, 782, 840, 67, 117, 181, 317, 555, 153, 264, 368, 214, 450, 771, 426, 467, 462, 139, 243, 485, 3...
              array[n] = dummy        # => 827, 827, 827, 827, 827, 827, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994, 994,...
              swapped = true          # => true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, ...
              end                     # => nil, nil, nil, true, true, true, true, true, true, nil, nil, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, nil, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, nil, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, t...
             i+=1                     # => 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 21...
          end                         # => nil, nil

      end           # => nil
      return array  # => [76, 385, 716, 745, 65, 120, 744, 134, 569, 827, 836, 88, 717, 229, 921, 361, 561, 752, 71, 300, 182, 767, 512, 372, 304, 216, 276, 435, 427, 521, 289, 707, 931, 240, 366, 958, 542, 318, 207, 210, 599, 395, 791, 852, 413, 310, 845, 875, 1, 259, 190, 353, 930, 862, 489, 183, 722, 710, 492, 911, 506, 729, 981, 174, 646, 941, 667, 101, 855, 612, 257, 654, 477, 593, 735, 697, 127, 910, 60, 156, 320, 115, 280, 146, 900, 696, 180, 736, 706, 463, 566, 868, 586, 370, 885, 373, 534, 188, 319, 742, 410, 167, 154, 350, 937, 614, 402, 821, 72, 100, 898, 658, 786, 32, 928, 581, 861, 11, 793, 158, 975, 187, 524, 248, 523, 140, 55, 498, 552, 948, 509, 97, 755, 418, 466, 962, 178, 510, 656, 460, 538, 982, 235, 246, 399, 225, 557, 955, 201, 526, 639, 854, 82, 110, 856, 516, 763, 906, 560, 860, 208, 749, 5, 810, 760, 391, 888, 645, 13, 979, 434, 698, 200, 944, 926, 142, 328, 114, 664, 298, 91, 401, 782, 840, 67, 117, 181, 317, 555, 153, 264, 368, 214, 450, 771, 426, 467, 462,...
end


bubblesort(array)  # => [76, 385, 716, 745, 65, 120, 744, 134, 569, 827, 836, 88, 717, 229, 921, 361, 561, 752, 71, 300, 182, 767, 512, 372, 304, 216, 276, 435, 427, 521, 289, 707, 931, 240, 366, 958, 542, 318, 207, 210, 599, 395, 791, 852, 413, 310, 845, 875, 1, 259, 190, 353, 930, 862, 489, 183, 722, 710, 492, 911, 506, 729, 981, 174, 646, 941, 667, 101, 855, 612, 257, 654, 477, 593, 735, 697, 127, 910, 60, 156, 320, 115, 280, 146, 900, 696, 180, 736, 706, 463, 566, 868, 586, 370, 885, 373, 534, 188, 319, 742, 410, 167, 154, 350, 937, 614, 402, 821, 72, 100, 898, 658, 786, 32, 928, 581, 861, 11, 793, 158, 975, 187, 524, 248, 523, 140, 55, 498, 552, 948, 509, 97, 755, 418, 466, 962, 178, 510, 656, 460, 538, 982, 235, 246, 399, 225, 557, 955, 201, 526, 639, 854, 82, 110, 856, 516, 763, 906, 560, 860, 208, 749, 5, 810, 760, 391, 888, 645, 13, 979, 434, 698, 200, 944, 926, 142, 328, 114, 664, 298, 91, 401, 782, 840, 67, 117, 181, 317, 555, 153, 264, 368, 214, 450, 771, 426, 467, 462, ...

Benchmark.realtime do              # => Benchmark
  1_000_000.times{ rand(1000)^2 }  # => 1000000
end                                # => 0.23506969600566663
